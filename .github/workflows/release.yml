name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Release
    runs-on: windows-latest

    steps:
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
        with:
          vs-version: '[16.0,17.0)'
          # Visual Studio 2019
          
      - name: Checkout
        uses: actions/checkout@v2.3.3
      
      - name: Update dependencies
        run: msbuild.exe /target:clean,restore
      
      - name: Decode signing certificate
        run: |
            $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.SIGNING_CERT }}")
            $currentDirectory = Get-Location
            $certificatePath = Join-Path -Path $currentDirectory -ChildPath "fast-file.pfx"
            [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)
            $pwd = ConvertTo-SecureString "${{ secrets.SIGNING_CERT_PWD }}" -asplaintext -force
            Import-PfxCertificate -FilePath $certificatePath -CertStoreLocation "Cert:\CurrentUser\My" -Password $pwd

      - name: MSBuild Debug
        working-directory: .
        run: msbuild.exe QuickFile.sln /p:Configuration=Debug /target:build
        #/p:AssemblyOriginatorKeyFile "fast-file.pfx" /p:PackageCertificatePassword="${{ secrets.SIGNING_CERT_PWD }}"
        #/target:clean;build;publish /p:ApplicationVersion=<VERSION> /p:SignAssembly=true /p:GenerateManifests=true /p:SignManifests=true /p:AssemblyOriginatorKeyFile=<PFX_PATH> /p:ManifestCertificateThumbprint=<CERTIFICATE_ID> /property:Configuration=<CONFIGURATION>;PublishDir=<PUBLISH_DIR>;BootstrapperEnabled=true;PublishUrl=<PUBLISH_URL>;InstallUrl=<INSTALL_URL>;UpdateUrl=<UPDATE_URL>

      - name: MSBuild Release
        working-directory: .
        run: msbuild.exe QuickFile.sln /p:Configuration=Release /target:build
        #"fast-file.pfx" /p:PackageCertificatePassword="${{ secrets.SIGNING_CERT_PWD }}"
      
      - name: Compute release version
        run: |
            echo "${{ github.ref }}"
            "${{ github.ref }}" -match "v(\d+\.\d+\.\d+)"
            echo "PUBLISH_VERSION=$Matches[1].${{ github.run_number }}" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: MSBuild publish
        working-directory: .
        run: msbuild.exe QuickFile.sln /p:Configuration=Release /target:publish /p:ApplicationVersion="${{ PUBLISH_VERSION }}" /property:PublishDir="publish\" 
       
      - name: Save artifacts
        uses: actions/upload-artifact@v2
        with:
            name: publish
            path: publish/
      
      - name: Make release zip
        working-directory: .
        run: Compress-Archive "fast-file-v${{ PUBLISH_VERSION }}.zip" -Path "publish/*"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true

      - name: Upload release asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./fast-file-v${{ PUBLISH_VERSION }}.zip
          #asset_name: my-artifact.zip
          asset_content_type: application/zip